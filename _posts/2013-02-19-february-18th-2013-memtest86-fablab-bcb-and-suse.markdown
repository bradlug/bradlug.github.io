---
author: John
comments: true
date: 2013-02-19 12:25:39+00:00
excerpt: <strong>David S</strong> introduced <a href="http://memtest.org/">memtest86+</a>
  which can diagnose faulty RAM which may cause random crashes, the storage of faulty
  data, incorrect checksums and a range of inconsistent errors.
layout: post
redirect_from: /february-18th-2013-memtest86-fablab-bcb-and-suse
slug: february-18th-2013-memtest86-fablab-bcb-and-suse
title: February 18th 2013 memtest86+, FabLab, BCB and SUSE
wordpress_id: 1111
categories:
- Past Meetings
---

**David S** introduced [memtest86+](http://memtest.org/) which can diagnose faulty RAM which may cause random crashes, the storage of faulty data, incorrect checksums and a range of inconsistent errors.

_memtest86+_ carries out a series of tests which can take a long time to execute; if errors are found, you can isolate, remove or swap memory but note that two memory chips from the same batch are likely to exhibit the same problem. If _memtest86+_ hangs, there may be a motherboard problem. If there are no errors, the problem may have gone away simply because the chips have been waggled in their sockets or because _memtest86+_ doesn't pick up all errors.

You can set two kernel parameters: `memtest=n` runs _n_ passes of _memtest86+_ and puts faulty memory regions out of use but it doesn't catch all errors. `memmap="size$location"` puts the size of RAM after the location in hex out of bounds. Unfortunately, there is no easy way of recording errors generated by _memtest86+_ though there is an option to identify regions of bad RAM.

You can edit lilo.conf or GRUB and add the expression `memmap="size\$location"` to the boot parameters.

**David C** reported back on the visit to [FabLab](http://www.centreofmanufacturingexcellence.com/fab-lab/). They are interested in whether we would want to use their space



	
  1. for personal use, in which case people need to turn up with files

	
  2. to run a Raspberry Pi/Arduino club

	
  3. as the basis for a Keighley LUG

	
  4. to demonstrate on a voluntary or paid-for basis software like GIMP, Inkscape or freeCAD

	
  5. to share designs

	
  6. to create documentation.


**David S** and **Brian** then reported on [BCB](http://www.bcbradio.co.uk/); the next programme is on 7 March; so it needs to be ready by 28 February. There are opportunities for people to contribute via a Google hangout or an Audacity recording.

**David C** then updated people on the website.

**John** rounded the session off with a history of [SUSE](https://www.suse.com/) and its contributions to Linux. The slides are here: Â [SUSE_02_12](http://www.bradlug.co.uk/blog/2013/02/19/files/SUSE_02_12.odp).
